let CustomErrorHandler,JwtService;_edb‍.x([["default",()=>_edb‍.o]]);_edb‍.w("../Services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_edb‍.w("../Services/JWTService",[["default",["JwtService"],function(v){JwtService=v}]]);


const auth = async (req, res, next) => {
  let authHeader = req.headers.authorization;

  if (!authHeader) {
    return next(CustomErrorHandler.unAuthorized());
  }

  const token = authHeader.split(' ')[1];

  try {
    const { _id, role } = await JwtService.verify(token);
    const user = { _id, role };
    req.user = user;

    next();
  } catch (err) {
    return next(CustomErrorHandler.unAuthorized());
  }
};

_edb‍.d(auth);
